name: Deploy testing to Heroku-dev
'on':
  push:
    branches:
      - testing
jobs:

  Deploy-testing-to-Heroku:
    runs-on: iiit-vm
    environment: testing
    steps:
      - name: Adding local bin to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Checking out testing branch
        run: git checkout testing

      - name: Installing poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -

      - name: Installing pip packages
        run: poetry install

      - name: Running bandit tests
        run: poetry run bandit -r ${{ github.workspace }}

      - name: Running flake8 tests
        run: poetry run flake8 ${{ github.workspace }} --exclude=migrations

      - name: Creating environment variables
        run: echo "SECRET_KEY=a">.env && echo "EMAIL=a">>.env

      - name: Setting git credentials
        run: git config --global user.email "watsonhex@gmail.com" && git config --global user.name "Github runner"

      - name: Run makemigrations
        run: yes | poetry run python manage.py makemigrations

      - name: Creating requirements.txt
        run: poetry export -f requirements.txt --output requirements.txt

      - name: Git add and commit
        run: git add . && if [[ $(git status -s) ]]; then git commit -m "Migrations"; fi

      - name: Heroku deploy
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_TESTING: ${{ secrets.HEROKU_APP_TESTING }}
        run: dpl --provider=heroku --app=$HEROKU_APP_TESTING --api-key=$HEROKU_API_KEY
        shell: bash -ieo pipefail {0}

      - name: Pushing to Github
        run: git pull && git push

  Create-issues-using-TODO:
    runs-on: iiit-vm
    steps:
      - uses: actions/checkout@v2
        with:
            fetch-depth: 2

      - name: Checking out testing branch
        run: git checkout testing

      - name: Github login
        run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

      - name: Creating issues
        run: readarray -t array <<< $(git diff HEAD^ --name-only -G "TODO" -- ':!:*.yml' | xargs --no-run-if-empty git
                grep -n "TODO" --) && for command in "${array[@]}"; do
                    gh issue create --title "${command##*#}" --body "${command}" --label "todo" || echo "ERROR $(command)";
                      done

      - name: Github logout
        run: gh auth logout --hostname github.com

  Internal-deploy:
    runs-on: iiit-vm
    needs: Deploy-testing-to-Heroku
    steps:

      - uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Checking out testing branch
        run: git checkout testing

      - name: Adding remote
        run: git remote add production dokku@192.168.1.229:django-collabconnect || echo "Remote already exists"

      - name: Pushing
        run: git push production -f testing:main

